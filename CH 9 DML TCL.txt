1 INSERT TWO ROWS TO R1 TABLE. (USE LITERAL VALUES)
ANS-> INSERT INTO R1 VALUES (1,'AMERICA');
      INSERT INTO R1 VALUES (2,'INDIA');

2 INSERT TWO ROWS TO D1 TABLE. SUPPLY VALUES ONLY FOR NOT NULL COLUMNS. (USE SUBSTITUTION VARIABLES)
ANS->  INSERT INTO D1 (DEPARTMENT_NAME , LOCATION_ID ) VALUES ('&DN',&LID);
       Enter value for dn: SALES
       Enter value for lid: 200
       /
       Enter value for dn: ACCOUNT
       Enter value for lid: 2100	

3 INSERT TWO ROWS TO L1 TABLE. SUPPLY VALUES FOR ALL COLUMNS, BUT KEEP NULL FOR COLUMNS WHICH ALLOWS NULL.
ANS-> INSERT INTO L1 (LOCATION_ID,STREET_ADRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID) VALUES (2100,NULL,NULL,'AHMEDABAD',NULL,11);
      INSERT INTO L1 (LOCATION_ID,STREET_ADRESS,POSTAL_CODE,CITY,STATE_PROVINCE,COUNTRY_ID) VALUES (2143,NULL,NULL,'GOA',NULL,12);

4 INSERT ALL ROWS OF R1 TABLE INTO SAME TABLE, USING SINGLE COMMAND.
ANS->INSERT INTO R1 SELECT * FROM REGIONS;

5 INSERT TWO ROWS TO C1 TABLE, USE DEFAULT KEY WORD.
AND->INSERT INTO C1 VALUES (21,'INDIA',DEFAULT);

6 CREATE SAVEPOINT NAMED FIRST.
AND->SAVEPOINT FIRST;

7 INSERT TWO ROWS TO C1 TABLE, USE SUB QUERY TO GET VALUE FOR REGION_ID COLUMN.
ANS-> INSERT INTO C1 (COUNTRY_ID,COUNTRY_NAME,REGION_ID) VALUES (20,'INDIA',(SELECT REGION_ID FROM REGIONS  WHERE REGION_ID ='2'));

8 INSERT IN R1 TABLE FROM REGIONS TABLE USING SUB QUERY. IT SHOULD INSERT ALL ROWS WHERE REGION_ID IS HIGHER THAN 2.
ANS->INSERT INTO R1 SELECT * FROM REGIONS WHERE REGION_ID > 2;

9 INSERT INTO D1 TABLE FROM DEPARTMENTS TABLE FOR ONLY DEPARTMENT_NAME AND LOCATION_ID COLUMNS. IT SHOULD INSERT ALL ROWS OF DEPARTMENTS WHERE DEPARTMENT_ID IS LOWER THAN 80.
ANS->INSERT INTO D1 (DEPARTMENT_NAME,LOCATION_ID) SELECT DEPARTMENT_NAME,LOCATION_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID < 80;

8 UPDATE ALL DEPARTMENT_NAME TO UPPER LATTERS.
ANS->UPDATE D1 SET DEPARTMENT_NAME = UPPER(DEPARTMENT_NAME);

9 UPDATE SALARY WITH 20% INCREMENT FOR EMPLOYEES WHO WORKS IN 50,90,110 DEPARTMENTS.
ANS-> UPDATE EMPLOYEES SET SALARY  = (SALARY + SALARY * .2) WHERE DEPARTMENT_ID = ANY (50,90,110);

10 CREATE SAVEPOINT NAMED SECOND.
ANS->SAVEPOINT SECOND;

11 UPDATE SALARY WITH 1500 INCREMENT FOR EMPLOYEES WHO WORKS IN Sales DEPARTMENT.
ANS-> UPDATE EMPLOYEES SET SALARY  = (SALARY + 1500) WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Sales');

12 UPDATE SALARY WITH 500 AND COMMISSION_PCT WITH .05 FOR EMPLOYEES WHO WORKS AS SA_REP , IT_PROG.
ANS-> UPDATE EMPLOYEES SET SALARY  = (SALARY + 500) ,  COMMISSION_PCT = (COMMISSION_PCT + COMMISSION_PCT * .05) WHERE JOB_ID = ANY ('SA_REP','IT_PROG');

13 DELETE ALL ROWS OF REGIONS TABLE HAVING REGION_ID HIGHER THAN 4.
ANS->INSERT INTO R1 SELECT * FROM REGIONS WHERE REGION_ID > 4;

14 CREATE SAVEPOINT NAMED THIRD.
ANS->SAVEPOINT THIRD;

15 DELETE ALL ROWS OF DEPARTMENTS TABLE HAVING DEPARTMENT_ID HIGHER THAN 190.
ANS-> DELETE DEPARTMENTS WHERE DEPARTMENT_ID = (SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_ID > '190');

16 DELETE ALL ROWS OF EMPLOYEES TABLE WHO WORKS IN Marketing DEPARTMENT.
ANS-> DELETE EMPLOYEES WHERE DEPARTMENT_ID = (SELECT  DEPARTMENT_ID FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Marketing');

17 UNDO ALL CHANGES DONE AFTER SAVEPOINT NAMED THIRD.
ANS-> ROLLBACK TO THIRD;

18 UNDO ALL CHANGES DONE AFTER SAVEPOINT NAMED FIRST.
ANS->  ROLLBACK TO FIRST;

19 SAVE ALL REMAINING CHANGES.
ANS-> COMMIT;  
