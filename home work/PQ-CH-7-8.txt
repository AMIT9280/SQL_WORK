
                                                                  CHAPTER 7:
                                                               ===============

1 DISPLAY FIRST_NAME , SALARY WHO GETS HIGHER SALARY THAN Diana
ANS-> SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE FIRST_NAME = 'Diana');

2 DISPLAY LAST_NAME , SALARY WHO GETS LOWER SALARY THAN AVERAGE SALARY.
ANS-> SELECT LAST_NAME , SALARY FROM EMPLOYEES WHERE SALARY <(SELECT AVG(SALARY)FROM EMPLOYEES);

3 DISPLAY FIRST_NAME , SALARY WHO GETS HIGHEST SALARY.
ANS-> SELECT FIRST_NAME , SALARY FROM EMPLOYEES WHERE SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES);

4 DISPLAY LAST_NAME , HIRE_DATE WHO WERE HIRED FIRST IN COMPANY.
ANS-> SELECT LAST_NAME , TO_CHAR(HIRE_DATE,'YYYY') FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY') = (SELECT MIN(TO_CHAR(HIRE_DATE,'YYYY'))  FROM EMPLOYEES);

5 DISPLAY DEPARTMENT_ID , FIRST_NAME , SALARY WHO GETS HIGHEST SALARY IN EACH DEPARTMENT.
ANS-> SELECT DEPARTMENT_ID,FIRST_NAME,SALARY FROM EMPLOYEES WHERE (SALARY,DEPARTMENT_ID) IN (SELECT MAX(SALARY), DEPARTMENT_ID FROM EMPLOYEES GROUP BY DEPARTMENT_ID) ORDER BY 1;

6 DISPALY JOB_ID , LAST_NAME , HIRE_DATE WHO WERE HIRED LAST FOR HIS/HER JOB.
ANS-> SELECT JOB_ID , LAST_NAME , TO_CHAR(HIRE_DATE,'YYYY') FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE,'YYYY') = (SELECT MAX(TO_CHAR(HIRE_DATE,'YYYY'))  FROM EMPLOYEES);

7 DISPLAY EMPLOYEE_ID , SALARY FOR THOSE WHO GETS HIGHEST SALARY FOR THEIR MANAGER.
ANS-> SELECT EMPLOYEE_ID,MAX(SALARY) SALARY FROM EMPLOYEES GROUP BY EMPLOYEE_ID,MANAGER_ID,FIRST_NAME ORDER BY 2 DESC;

8 DISPLAY THOSE WHO WERE HIRED BEFORE Lex.
ANS-> SELECT * FROM EMPLOYEES WHERE HIRE_DATE < (SELECT HIRE_DATE FROM EMPLOYEES WHERE FIRST_NAME = 'Lex') ORDER BY HIRE_DATE;

9 DISPLAY FIRST_NAME , DEPARTMENT_ID , SALARY , HIGHEST_SALARY OF DEPARTMENT_ID IN WHICH EMPLOYEE WORKS.
ANS->  SELECT FIRST_NAME , DEPARTMENT_ID , SALARY , MAX(SALARY)
       FROM EMPLOYEES
       GROUP BY FIRST_NAME , DEPARTMENT_ID , SALARY;

10 DISPLAY LAST_NAME , JOB_ID , HIRE_DATE , THE DATE ON WHICH FIRST EMPLOYEE HIRED FOR THE SAME JOB.
ANS->SELECT JOB_ID ,MIN(HIRE_DATE) HIRE_DATE,LAST_NAME FROM EMPLOYEES GROUP BY JOB_ID,LAST_NAME ORDER BY HIRE_DATE;

11 DISPLAY EMPLOYEE_ID , HIRE YEAR , SALARY , LOWEST SALARY , HIGHEST SALARY FOR THE HIRE YEAR.
ANS-> SELECT EMPLOYEE_ID , YEAR , SALARY , "MIN(SALARY)" , "MAX(SALARY)" FROM
      (SELECT EMPLOYEE_ID , TO_CHAR(HIRE_dATE,'YYYY') YEAR, SALARY FROM EMPLOYEES) JOIN
      (SELECT TO_CHAR(HIRE_DATE,'YYYY') YEAR , MIN(SALARY) , MAX(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'YYYY')) USING (YEAR)
      ORDER BY 2,1;

12 DISPLAY DEPARTMENT_ID , AVERAGE SALARY FOR THE DEPARTMENT WHICH GETS HIGHEST AVERAGE SALARY.
ANS-> 

13 DISPLAY JOB_ID , AVERAGE SALARY FOR THE JOB_ID WHICH GETS LOWEST AVERAGE SALARY.
ANS->  SELECT JOB_ID , SALARY FROM EMPLOYEES WHERE SALARY < (SELECT AVG(SALARY) FROM EMPLOYEES);

14 DISPALY MANAGER_ID , COUNT OF EMPLOYEES FOR THE MANAGER_ID TO WHOM HIGHEST NO. OF EMPLOYEE REPORTS.
ANS-> SELECT MANAGER_ID,COUNT(MANAGER_ID) FROM EMPLOYEES WHERE MANAGER_ID > (SELECT COUNT(MANAGER_ID) FROM EMPLOYEES)GROUP BY MANAGER_ID;

15 DISPLAY DEPARTMENT_ID , JOB_ID , LOWEST SALARY FOR THE COMBINATION OF DEPARTMENT_ID AND JOB_ID WHICH GET HIGHEST MINIMUM SALARY.
ANS-> SELECT DEPARTMENT_ID , JOB_ID ,MIN(SALARY) FROM EMPLOYEES WHERE SALARY > (SELECT MIN(SALARY) FROM EMPLOYEES)GROUP BY DEPARTMENT_ID , JOB_ID;

=============================================================================--CH-7-END---==============================================================================

                                          CHAPTER 8: (USE MPSEMP ,MPSDEPT, MPSINCR,MPSITMST,MPSITTRN TABLES)
                                         ==================================================================== 

1 DISPLAY ALL JOBS OF DEPTNO 10 AND 20.
ANS->  SELECT JOB FROM MPSEMP WHERE DEPTNO = 10
       UNION ALL
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 20;

2 DISPLAY NON-DUPLICATE JOBS OF DEPTNO 20 AND 30.
ANS->  SELECT JOB FROM MPSEMP WHERE DEPTNO = 20
       UNION
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 30;

3 DISPLAY COMMON JOBS OF DEPTNO 10,20 AND 30,
ANS->  SELECT JOB FROM MPSEMP WHERE DEPTNO = 10
       INTERSECT
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 20  
       INTERSECT
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 30;
 
4 DISPLAY UN-COMMON JOB OF DEPARTMENT 20 (WHICH DOESN'T EXIST IN 10 AND 30)
ANS->SELECT JOB FROM MPSEMP WHERE DEPTNO = 20
     UNION
     SELECT JOB FROM MPSEMP WHERE DEPTNO = 10
     UNION
     SELECT JOB FROM MPSEMP WHERE DEPTNO = 30;

5 DISPLAY UNIQUE JOBS OF DEPT 10 AND 20 FOR WHICH NO ONE WORKS IN DEPT 30.
ANS->  SELECT JOB FROM MPSEMP WHERE DEPTNO = 10
       UNION
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 20
       MINUS
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 30;

6 DISPLAY UNIQUE JOBS OF DEPT 30 FOR WHICN NO ONE WORKS IN DEPTNO 10 AND 20.
ANS->  SELECT JOB FROM MPSEMP WHERE DEPTNO = 30
       MINUS
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 10
       MINUS
       SELECT JOB FROM MPSEMP WHERE DEPTNO = 20;

7 DISPLAY ONLY NON-COMMON JOBS OF ALL DEPT.
ANS-> SELECT JOB FROM MPSEMP
      UNION
      SELECT JOB FROM MPSEMP;

8 DISPLAY DEPTNO IN WHICH NO EMPLOYEE IS HIRED.
ANS->  SELECT DEPTNO , TO_CHAR(HIREDATE) FROM MPSEMP
       UNION ALL
       SELECT DEPTNO , TO_CHAR(HIREDATE) FROM MPSEMP;

9 DISPLAY JOB FOR WHICH COMPANY HIRED EMPLOYEES IN YEAR 81 BUT NOT IN 82 AND 89.
ANS-> SELECT JOB , HIREDATE FROM MPSEMP WHERE  TO_CHAR(HIREDATE,'YY') = '81'
      MINUS
      SELECT JOB ,HIREDATE FROM MPSEMP WHERE  TO_CHAR(HIREDATE,'YY') = '82'
      MINUS
      SELECT JOB , HIREDATE FROM MPSEMP WHERE  TO_CHAR(HIREDATE,'YY') = '89';

10 DISPLAY THOSE EMPNO WHO HAVE NOT GOT ANY INCREMENT.
ANS->  SELECT EMPNO FROM MPSEMP
       MINUS
       SELECT EMPNO FROM MPSINCR;


11 DISPLAY THOSE NAME FOR WHICH NO TRANSACTION IS DONE.
ANS-> SELECT  ITNO FROM MPSITMST
      MINUS
      SELECT  ITNO FROM MPSITTRN;

12 DISPLAY THOSE NAME FOR WHICH 3 OR MORE TRANSACTION WERE DONE.
ANS->  SELECT  ITNO FROM MPSITMST
       INTERSECT
       SELECT  ITNO FROM MPSITTRN;

13 DISPLAY THOSE NAME FOR WHICH 3 OR MORE ISSUE TRANSACTION WERE DONE.
ANS->

14 DISPLAY THOSE NAME FOR WHICH TRANSACTION WITH TRANQTY 1000 OR MORE IS DONE.
ANS->

15 DISPLAY THOSE NAME FOR WHICH ISSUE TRANSACTIONS ARE DONE BUT RECIEVE TRANSACTION ARE NOT DONE.
ANS->
